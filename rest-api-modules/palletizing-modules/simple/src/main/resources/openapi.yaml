openapi: "3.0.0"
info:
  version: 1.0.0
  title: Simple palletizing
  license:
    name: MIT
servers:
  - url: http://localhost:8088/
paths:
  /pallets:
    get:
      summary: List all pallets
      operationId: listPallets
      tags:
        - pallets         
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pallets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pallets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pallet
      operationId: createPallet
      tags:
        - pallets
      requestBody:
        $ref: '#/components/requestBodies/PalletBody'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pallets/{palletId}:
    get:
      summary: Info for a specific pallet
      operationId: showPalletById
      tags:
        - pallets
      parameters:
        - name: palletId
          in: path
          required: true
          description: The id of the pallet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pallet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /items:
    get:
      summary: List all items
      operationId: listItems
      tags:
        - items         
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of items
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Items"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a item
      operationId: createItem
      tags:
        - items
      requestBody:
        $ref: '#/components/requestBodies/ItemBody'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /items/{itemId}:
    get:
      summary: Info for a specific tiem
      operationId: showItemById
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /palletizing:
    get:
      summary: Info for a specific package
      operationId: showPalletizedPallet
      tags:
        - palletizing
      parameters:
        - name: palletId
          in: query
          required: true
          description: The id of the package to retrieve
          schema:
            type: string
        - name: itemId
          in: query
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
        - name: pattern
          in: query
          required: false
          description: palletizing pattern
          schema:
            type: string
        - name: noOfItems
          in: query
          required: false
          description: noOfItems to palletize. Override pallet definition
          schema:
            type: string
        - name: noOfLayers
          in: query
          required: false
          description: noOfLayers. Override pallet definition
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PalletizedPallet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pallet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        Weight:
          type: integer
          format: int32
        maxLoad:
          type: integer
          format: int32
        maxHeight:
          type: integer
          format: int32
    Pallets:
      type: array
      items:
        $ref: "#/components/schemas/Pallet"
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        Weight:
          type: integer
          format: int32
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    PalletizedItems:
      type: object
      properties:
        zAxis:
          type: integer
          format: int32
        xAxis:
          type: integer
          format: int32
        yAxis:
          type: integer
          format: int32
        rotate:
          type: integer
          format: int32
    PalletizedPallet:
      type: object
      properties:
        noOfItems:
          type: integer
          format: int32
        noOfLayers:
          type: integer
          format: int32
        weight:
          type: integer
          format: int32
        items:
          type: array
          items:
           $ref: "#/components/schemas/PalletizedItems"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  parameters:        
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: >-
        ID of the request, unique to the call, as determined by the initiating
        party.
      required: true
      example: 99391c7e-ad88-49ec-a2ad-99ddcb1f7721
      schema:
        type: string
        format: uuid
  requestBodies:
    ItemBody:
      description: A JSON object containing item information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'        
    PalletBody:
      description: A JSON object containing pallet information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pallet'        
  headers:
    X-Request-ID:
      description: >-
        ID of the request, unique to the call, as determined by the initiating
        party.
      required: true
      example: 99391c7e-ad88-49ec-a2ad-99ddcb1f7721
      schema:
        type: string
        format: uuid
 
        
          